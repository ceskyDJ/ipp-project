<?php
/**
 * This is a part of IPP project
 *
 * @author Michal Šmahel (xsmahe01)
 * @date 2022
 */

use Test\Entity\TestReport;
use Test\Enum\TestStatus;

/**
 * Available variables:
 * @var TestReport $testReport
 */

// Parser for formatting XML
$xmlParser = new DOMDocument;
$xmlParser->preserveWhiteSpace = false;
$xmlParser->formatOutput = true;
?>
<!DOCTYPE html>





<html lang="cs">
<head>
    <meta charset="UTF-8" />

    <meta name="description" content="Protokol z proběhlého testování. Zobrazuje průběhy provedených testů a jejich
    výsledky včetně dalších detailů jako jsou referenční a reálné výstupy, návratové kódy apod." />
    <meta name="author" content="Michal Šmahel (xsmahe01)" />

    <!--suppress CssUnusedSymbol Some classes are generated by PHP -->
    <style>
        /* Unfortunately external sources are forbidden, so CSS code must be here */

        /* GENERAL */
        * {
          box-sizing: border-box;
        }

        html,
        body {
          padding: 0;
          margin: 0;
          width: 100%;
          height: 100%;
        }

        a {
          text-decoration: none;
          user-select: none;
          -moz-user-select: none;
          -ms-user-select: none;
          -webkit-user-select: none;
        }

        .hide {
          display: none !important;
        }

        /* LAYOUT */
        body {
          background: whitesmoke;
          display: grid;
          grid-template-rows: 5em auto 3em;
          grid-template-columns: 1fr 60% 1fr;
          grid-template-areas:
            "header header header"
            ". main ."
            "footer footer footer";
        }

        .main-header {
          grid-area: header;
          padding: 0 3em;
          border-bottom: 1px solid gray;
        }

        .main-container {
          grid-area: main;
        }

        .main-footer {
          grid-area: footer;
          justify-self: center;
          align-self: center;
        }

        .test-results-section {
          display: flex;
          justify-content: space-between;
          flex-wrap: wrap-reverse;
          column-gap: 3em;
        }

        .test-results-section .grouped-test-results {
          order: 2;
          width: 50%;
        }

        /* COMPONENTS */
        .main-heading {
          color: #1d538c;
        }

        .test-table {
          border-collapse: collapse;
        }

        .test-table .table-row.successful {
          background: #56c485;
        }

        .test-table .table-row.failed {
          background: #dc7171;
        }

        .test-table .table-cell {
          border: 1px solid black;
          padding: .2em .5em;
        }

        .test-table .table-row.header-row .table-cell.percentage:after {
          content: "100 %";
          display: block;
          height: 0;
          overflow: hidden;
        }

        .test-table .table-cell.percentage {
          text-align: right;
        }

        .test-table .table-row.header-row .table-cell.percentage {
          text-align: center;
          cursor: help;
        }

        .test-table .table-row.header-row .table-cell.percentage:after {
          content: "";
          display: block;
          border-bottom: 1px gray dotted;
          max-width: 1em;
          margin: 0 auto;
        }

        .test-table .table-row.test-detail .table-cell {
          padding: 0;
        }

        .test-detail .exit-codes {
          display: flex;
          justify-content: space-between;
          padding: .5em;
        }

        .test-detail .outputs {
          border-top: 1px solid lightgray;
          padding: .5em;
        }

        .test-detail .outputs .reference, .test-detail .outputs .real {
          display: flex;
          flex-direction: column;
        }

        .test-detail .outputs .real {
          margin-top: .3em;
        }

        .test-detail .value {
          border: 1px dashed rgba(173, 130, 103, 0.2);
          padding: .1em;
        }

        .test-detail .value:empty {
          border: none;
        }

        .detail-button {
          color: #eff3f3;
          text-shadow: 1px 1px #adb6b6;
        }

        .detail-button:after {
          content: attr(data-name);
          display: block;
          height: 0;
          overflow: hidden;
          font-weight: bold;
        }

        .detail-button:hover {
          font-weight: bold;
        }

        .summary {
          display: flex;
          justify-content: space-between;
          width: 25em;
          margin-top: .2em;
        }

        .summary .percentage {
          color: #424040;
          font-size: smaller;
        }
    </style>

    <title>IPP - projekt | Testovací protokol</title>
</head>


<body>
    <header class="main-header">
        <h1 class="main-heading">Testovací protokol k projektu z předmětu IPP</h1>
    </header>

    <main class="main-container">
        <header>
            <h2>Provedené testy</h2>

            <strong>Délka testování: </strong>
            <span>
                <?php $time = $testReport->countTestingLength() ?>
                <?= $time->days != 0 ? $time->format('%a dní') : '' ?>
                <?= $time->h != 0 ? $time->format('%h hodin') : '' ?>
                <?= $time->i != 0 ? $time->format('%i minut') : '' ?>
                <?= $time->s != 0 ? $time->format('%s sekund') : '' ?>
            </span>

            <div class="summary">
                <?php
                $tests = $testReport->countTests();
                $successful = $testReport->countSuccessful();
                $failed = $testReport->countFailed();
                ?>
                <div class="summary-item">
                    <strong>Celkem: </strong><span><?= $tests ?></span>
                </div>
                <div class="summary-item">
                    <strong>Úspěšné: </strong>
                    <span><?= $successful ?></span>
                    <span class="percentage">(<?= floor($successful / $tests * 100) ?>&nbsp;%)</span>
                </div>
                <div class="summary-item">
                    <strong>Neúspěšné: </strong>
                    <span><?= $failed ?></span>
                    <span class="percentage">(<?= ceil($failed / $tests * 100) ?>&nbsp;%)</span>
                </div>
            </div>
        </header>

        <section class="test-results-section">
            <article class="grouped-test-results">
                <header>
                    <h3>Shrnutí testů podle adresářů</h3>
                </header>

                <section>
                    <table class="test-table">
                        <thead>
                        <tr class="table-row header-row">
                            <th class="table-cell">Adresář</th>
                            <th class="table-cell">Úspěšné</th>
                            <th class="table-cell">Neúspěšné</th>
                            <th class="table-cell percentage" title="Relativní úspěšnost testů">%</th>
                        </tr>
                        </thead>

                        <tbody>
                        <?php foreach($testReport->getTestGroups() as $testGroup): ?>
                        <?php
                            $tests = $testGroup->countTests();
                            $successful = $testGroup->countSuccessful();
                            $failed = $testGroup->countFailed();
                        ?>
                        <tr class="table-row <?= $failed == 0 ? 'successful' : 'failed' ?>">
                            <td class="table-cell"><?= htmlspecialchars($testGroup->getName()) ?></td>
                            <td class="table-cell"><?= $successful ?></td>
                            <td class="table-cell"><?= $failed ?></td>
                            <td class="table-cell percentage"><?= round($successful / $tests * 100) ?>&nbsp;%</td>
                        </tr>
                        <?php endforeach; ?>
                        </tbody>
                    </table>
                </section>
            </article>

            <article class="complete-test-results">
                <header>
                    <h3>Kompletní přehled testů</h3>
                </header>

                <section>
                    <table class="test-table">
                        <thead>
                        <tr class="table-row header-row">
                            <th class="table-cell">Adresář</th>
                            <th class="table-cell">Test</th>
                            <th class="table-cell">Stav</th>
                            <th class="table-cell"><!-- Detail --></th>
                        </tr>
                        </thead>

                        <tbody>
                        <?php $i = 0; foreach($testReport as $test): ?>
                        <tr class="table-row <?= $test->getStatus() == TestStatus::SUCCESS ? 'successful' : 'failed'?>">
                            <td class="table-cell"><?= htmlspecialchars($test->getNamespace()) ?></td>
                            <td class="table-cell"><?= htmlspecialchars($test->getName()) ?></td>
                            <td class="table-cell">
                            <?php if($test->getStatus() == TestStatus::SUCCESS): ?>
                                úspěch
                            <?php elseif($test->getStatus() == TestStatus::BAD_EXIT_CODE): ?>
                                chybný návratový kód
                            <?php else: ?>
                                chybný výstup
                            <?php endif; ?>
                            </td>
                            <td class="table-cell"><a href="javascript:void();" class="detail-button __show-detail"
                                                      data-for="<?= $i ?>" data-name="Detail">Detail</a></td>
                        </tr>
                        <tr class="table-row test-detail __test-detail hide" data-id="<?= $i ?>">
                            <td colspan="4" class="table-cell">
                                <div class="exit-codes">
                                    <div class="reference">
                                        <strong>Požadovaný návratový kód: </strong>
                                        <code class="value">
                                            <?= htmlspecialchars($test->getReferenceExitCode()) ?>
                                        </code>
                                    </div>
                                    <div class="real">
                                        <strong>Návratový kód: </strong>
                                        <code class="value"><?= htmlspecialchars($test->getExitCode()) ?></code>
                                    </div>
                                </div>

                                <?php if(!empty($test->getReferenceOutput())): ?>
                                <div class="outputs">
                                    <div class="reference">
                                        <?php
                                            // It is good to have the same formatting for reference and real output,
                                            // so they are both re-formatted by DOMDocument library

                                            // Causes warnings for non-XML outputs, so it has to be "ignored"
                                            // Non-XML outputs is handled by $validXml variable, where is boolean
                                            // values stored (true = XML output, false = non-XML output)
                                            $validXml = @$xmlParser->loadXML($test->getReferenceOutput());

                                            $referenceOutput = $validXml ?
                                                $xmlParser->saveXML()
                                                : $test->getReferenceOutput();
                                        ?>
                                        <strong>Požadovaný výstup: </strong>
                                        <pre class="value"><code><?= htmlspecialchars($referenceOutput) ?></code></pre>
                                    </div>
                                    <div class="real">
                                        <?php
                                            // Causes warnings for non-XML outputs, so it has to be "ignored"
                                            // Non-XML outputs is handled by $validXml variable, where is boolean
                                            // values stored (true = XML output, false = non-XML output)
                                            $validXml = @$xmlParser->loadXML($test->getOutput());

                                            $realOutput = $validXml ?
                                                $xmlParser->saveXML()
                                                : $test->getOutput();
                                        ?>
                                        <strong>Výstup:</strong>
                                        <pre class="value"><code><?= htmlspecialchars($realOutput) ?></code></pre>
                                    </div>
                                </div>
                                <?php endif; ?>
                            </td>
                        </tr>
                        <?php $i++; endforeach; ?>
                        </tbody>
                    </table>
                </section>
            </article>
        </section>
    </main>

    <footer class="main-footer">
        Vytvořil Michal Šmahel (xsmahe01) v rámci projektu z předmětu <a href="https://www.fit.vut.cz/study/course/IPP/
        .cs">IPP</a> na <a href="https://www.fit.vut.cz/.cs">FIT VUT</a>.
    </footer>

    <script>
        document.querySelectorAll(".__show-detail").forEach(button => button.addEventListener("click", _ => {
            const detail = document.querySelector(".__test-detail[data-id='" + button.getAttribute("data-for") + "']");
            detail.classList.toggle("hide");
        }));
    </script>
</body>
</html>
